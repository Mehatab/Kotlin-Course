[{"type": "a", "text": "\n\nEdit Page\n"}, {"type": "i", "text": ""}, {"type": "span", "text": "Edit Page"}, {"type": "h1", "text": "CocoaPods integration"}, {"type": "p", "text": "Starting with 1.3.30, an experimental integration with CocoaPods is added\nto Kotlin/Native. This feature allows you to represent a Kotlin/Native Gradle-project as a\nCocoaPods dependency. Such a representation provides the following advantages:"}, {"type": "a", "text": "CocoaPods"}, {"type": "ul", "text": "\n\nSuch a dependency can be included in a Podfile of an Xcode project and automatically built (and rebuilt)\n along with this project. As a result, importing to Xcode is simplified since there is no need to\n write corresponding Gradle tasks and Xcode build steps manually.\n\n\nWhen building from Xcode, you can use CocoaPods libraries without writing\n .def files manually and setting cinterop tool parameters. In this case, all required parameters can be\n obtained from the Xcode project configured by CocoaPods.\n\n"}, {"type": "li", "text": "\nSuch a dependency can be included in a Podfile of an Xcode project and automatically built (and rebuilt)\n along with this project. As a result, importing to Xcode is simplified since there is no need to\n write corresponding Gradle tasks and Xcode build steps manually.\n"}, {"type": "p", "text": "Such a dependency can be included in a Podfile of an Xcode project and automatically built (and rebuilt)\n along with this project. As a result, importing to Xcode is simplified since there is no need to\n write corresponding Gradle tasks and Xcode build steps manually."}, {"type": "li", "text": "\nWhen building from Xcode, you can use CocoaPods libraries without writing\n .def files manually and setting cinterop tool parameters. In this case, all required parameters can be\n obtained from the Xcode project configured by CocoaPods.\n"}, {"type": "p", "text": "When building from Xcode, you can use CocoaPods libraries without writing\n .def files manually and setting cinterop tool parameters. In this case, all required parameters can be\n obtained from the Xcode project configured by CocoaPods."}, {"type": "p", "text": "For an example of CocoaPods integration, refer to the\ncocoapods sample."}, {"type": "a", "text": "cocoapods"}, {"type": "code", "text": "cocoapods"}, {"type": "h2", "text": "CocoaPods Gradle plugin"}, {"type": "p", "text": "The CocoaPods support is implemented in a separate Gradle plugin: org.jetbrains.kotlin.native.cocoapods."}, {"type": "code", "text": "org.jetbrains.kotlin.native.cocoapods"}, {"type": "blockquote", "text": "\nNote: The plugin is based on the multiplatform project model and requires applying the\norg.jetbrains.kotlin.multiplatform plugin. See details about the multiplatform plugin at\nthe corresponding page.\n"}, {"type": "p", "text": "Note: The plugin is based on the multiplatform project model and requires applying the\norg.jetbrains.kotlin.multiplatform plugin. See details about the multiplatform plugin at\nthe corresponding page."}, {"type": "strong", "text": "Note:"}, {"type": "code", "text": "org.jetbrains.kotlin.multiplatform"}, {"type": "a", "text": "corresponding page"}, {"type": "p", "text": "When applied, the CocoaPods plugin does the following:"}, {"type": "ol", "text": "\nAdds both debug and release frameworks as output binaries for all iOS and macOS targets.\nCreates a podspec task which generates a podspec\nfile for the given project.\n"}, {"type": "li", "text": "Adds both debug and release frameworks as output binaries for all iOS and macOS targets."}, {"type": "code", "text": "debug"}, {"type": "code", "text": "release"}, {"type": "li", "text": "Creates a podspec task which generates a podspec\nfile for the given project."}, {"type": "code", "text": "podspec"}, {"type": "a", "text": "podspec"}, {"type": "p", "text": "The podspec generated includes a path to an output framework and script phases which automate building\nthis framework during a build process of an Xcode project. Some fields of the podspec file can be\nconfigured using the kotlin.cocoapods { ... } code block."}, {"type": "code", "text": "kotlin.cocoapods { ... }"}, {"type": "div", "text": "\n// Apply plugins.\nplugins {\n    id(\"org.jetbrains.kotlin.multiplatform\") version \"1.3.30\"\n    id(\"org.jetbrains.kotlin.native.cocoapods\") version \"1.3.30\"\n}\n\n// CocoaPods requires the podspec to have a version.\nversion = \"1.0\"\n\nkotlin {\n    cocoapods {\n        // Configure fields required by CocoaPods.\n        summary = \"Some description for a Kotlin/Native module\"\n        homepage = \"Link to a Kotlin/Native module homepage\"\n\n        // The name of the produced framework can be changed.\n        // The name of the Gradle project is used here by default.\n        frameworkName = \"my_framework\"\n    }\n}\n\n"}, {"type": "pre", "text": "// Apply plugins.\nplugins {\n    id(\"org.jetbrains.kotlin.multiplatform\") version \"1.3.30\"\n    id(\"org.jetbrains.kotlin.native.cocoapods\") version \"1.3.30\"\n}\n\n// CocoaPods requires the podspec to have a version.\nversion = \"1.0\"\n\nkotlin {\n    cocoapods {\n        // Configure fields required by CocoaPods.\n        summary = \"Some description for a Kotlin/Native module\"\n        homepage = \"Link to a Kotlin/Native module homepage\"\n\n        // The name of the produced framework can be changed.\n        // The name of the Gradle project is used here by default.\n        frameworkName = \"my_framework\"\n    }\n}\n"}, {"type": "code", "text": "// Apply plugins.\nplugins {\n    id(\"org.jetbrains.kotlin.multiplatform\") version \"1.3.30\"\n    id(\"org.jetbrains.kotlin.native.cocoapods\") version \"1.3.30\"\n}\n\n// CocoaPods requires the podspec to have a version.\nversion = \"1.0\"\n\nkotlin {\n    cocoapods {\n        // Configure fields required by CocoaPods.\n        summary = \"Some description for a Kotlin/Native module\"\n        homepage = \"Link to a Kotlin/Native module homepage\"\n\n        // The name of the produced framework can be changed.\n        // The name of the Gradle project is used here by default.\n        frameworkName = \"my_framework\"\n    }\n}\n"}, {"type": "p", "text": "The following podspec fields are required by CocoaPods:"}, {"type": "ul", "text": "\nversion\nsummary\nhomepage\n"}, {"type": "li", "text": "version"}, {"type": "code", "text": "version"}, {"type": "li", "text": "summary"}, {"type": "code", "text": "summary"}, {"type": "li", "text": "homepage"}, {"type": "code", "text": "homepage"}, {"type": "p", "text": "A version of the Gradle project is used as a value for the version field.\nFieldssummary and homepage can be configured using the cocoapods code block."}, {"type": "code", "text": "version"}, {"type": "code", "text": "summary"}, {"type": "code", "text": "homepage"}, {"type": "code", "text": "cocoapods"}, {"type": "p", "text": "This podspec file can be referenced from a Podfile\nof an Xcode project. After that the framework built from the Kotlin/Native module can be used from\nthis Xcode project. If necessary, this framework is automatically rebuilt during Xcode build process."}, {"type": "a", "text": "Podfile"}, {"type": "h2", "text": "Workflow"}, {"type": "p", "text": "To import a Kotlin/Native module in an existing Xcode project:"}, {"type": "ol", "text": "\n\nMake sure that you have CocoaPods installed.\nWe recommend using CocoaPods 1.6.1 or later.\n\n\nConfigure a Gradle project: apply the org.jetbrains.kotlin.native.cocoapods plugin, add\nand configure the targets, and specify the required podspec fields.\n\n\nRun the podspec task. The podspec file described above will be generated.\n\nIn order to avoid compatibility issues during an Xcode build, the plugin requires using\n a Gradle wrapper. \n To generate the wrapper automatically during execution of the podspec task,\n run it with the parameter -Pkotlin.native.cocoapods.generate.wrapper=true.\n\n\n\nAdd a reference to the generated podspec in a Podfile of the Xcode project.\n\n target 'my-ios-app' do\n     pod 'my_kotlin_library', :path => 'path/to/my-kotlin-library'\n end\n\n\n\n\nRun pod install for the Xcode project.\n\n"}, {"type": "li", "text": "\nMake sure that you have CocoaPods installed.\nWe recommend using CocoaPods 1.6.1 or later.\n"}, {"type": "p", "text": "Make sure that you have CocoaPods installed.\nWe recommend using CocoaPods 1.6.1 or later."}, {"type": "a", "text": "installed"}, {"type": "li", "text": "\nConfigure a Gradle project: apply the org.jetbrains.kotlin.native.cocoapods plugin, add\nand configure the targets, and specify the required podspec fields.\n"}, {"type": "p", "text": "Configure a Gradle project: apply the org.jetbrains.kotlin.native.cocoapods plugin, add\nand configure the targets, and specify the required podspec fields."}, {"type": "code", "text": "org.jetbrains.kotlin.native.cocoapods"}, {"type": "li", "text": "\nRun the podspec task. The podspec file described above will be generated.\n\nIn order to avoid compatibility issues during an Xcode build, the plugin requires using\n a Gradle wrapper. \n To generate the wrapper automatically during execution of the podspec task,\n run it with the parameter -Pkotlin.native.cocoapods.generate.wrapper=true.\n\n"}, {"type": "p", "text": "Run the podspec task. The podspec file described above will be generated."}, {"type": "code", "text": "podspec"}, {"type": "blockquote", "text": "\nIn order to avoid compatibility issues during an Xcode build, the plugin requires using\n a Gradle wrapper. \n To generate the wrapper automatically during execution of the podspec task,\n run it with the parameter -Pkotlin.native.cocoapods.generate.wrapper=true.\n"}, {"type": "p", "text": "In order to avoid compatibility issues during an Xcode build, the plugin requires using\n a Gradle wrapper. \n To generate the wrapper automatically during execution of the podspec task,\n run it with the parameter -Pkotlin.native.cocoapods.generate.wrapper=true."}, {"type": "a", "text": "Gradle wrapper"}, {"type": "code", "text": "podspec"}, {"type": "code", "text": "-Pkotlin.native.cocoapods.generate.wrapper=true"}, {"type": "li", "text": "\nAdd a reference to the generated podspec in a Podfile of the Xcode project.\n\n target 'my-ios-app' do\n     pod 'my_kotlin_library', :path => 'path/to/my-kotlin-library'\n end\n\n\n"}, {"type": "p", "text": "Add a reference to the generated podspec in a Podfile of the Xcode project."}, {"type": "div", "text": "\n target 'my-ios-app' do\n     pod 'my_kotlin_library', :path => 'path/to/my-kotlin-library'\n end\n\n"}, {"type": "pre", "text": " target 'my-ios-app' do\n     pod 'my_kotlin_library', :path => 'path/to/my-kotlin-library'\n end\n"}, {"type": "code", "text": " target 'my-ios-app' do\n     pod 'my_kotlin_library', :path => 'path/to/my-kotlin-library'\n end\n"}, {"type": "li", "text": "\nRun pod install for the Xcode project.\n"}, {"type": "p", "text": "Run pod install for the Xcode project."}, {"type": "code", "text": "pod install"}, {"type": "p", "text": "After completing these steps, you can\nopen the generated workspace (see CocoaPods documentation)\nand run an Xcode build."}, {"type": "a", "text": "CocoaPods documentation"}, {"type": "h2", "text": "Interoperability"}, {"type": "p", "text": "The CocoaPods plugin also allows using CocoaPods libraries without manual configuring cinterop\nparameters (see the corresponding section\nof the multiplatform plugin documentation). The cocoapods { ... } code block allows you to\nadd dependencies on CocoaPods libraries."}, {"type": "a", "text": "corresponding section"}, {"type": "code", "text": "cocoapods { ... }"}, {"type": "div", "text": "\nkotlin {\n    cocoapods {\n        // Configure a dependency on AFNetworking.\n        // The CocoaPods version notation is supported.\n        // The dependency will be added to all macOS and iOS targets.\n        pod(\"AFNetworking\", \"~> 3.2.0\")\n    }\n}\n\n"}, {"type": "pre", "text": "kotlin {\n    cocoapods {\n        // Configure a dependency on AFNetworking.\n        // The CocoaPods version notation is supported.\n        // The dependency will be added to all macOS and iOS targets.\n        pod(\"AFNetworking\", \"~> 3.2.0\")\n    }\n}\n"}, {"type": "code", "text": "kotlin {\n    cocoapods {\n        // Configure a dependency on AFNetworking.\n        // The CocoaPods version notation is supported.\n        // The dependency will be added to all macOS and iOS targets.\n        pod(\"AFNetworking\", \"~> 3.2.0\")\n    }\n}\n"}, {"type": "p", "text": "To use these dependencies from a Kotlin code, import a package cocoapods.<library-name>.\nIn the example above, it's cocoapods.AFNetworking."}, {"type": "code", "text": "cocoapods.<library-name>"}, {"type": "code", "text": "cocoapods.AFNetworking"}, {"type": "p", "text": "The dependencies declared in this way are added in the podspec file and downloaded during\nthe execution of pod install."}, {"type": "code", "text": "pod install"}, {"type": "blockquote", "text": "\nImportant: To correctly import the dependencies into the Kotlin/Native module, the\nPodfile must contain either use_modular_headers!\nor use_frameworks!\ndirective.\n"}, {"type": "p", "text": "Important: To correctly import the dependencies into the Kotlin/Native module, the\nPodfile must contain either use_modular_headers!\nor use_frameworks!\ndirective."}, {"type": "strong", "text": "Important:"}, {"type": "a", "text": "use_modular_headers!"}, {"type": "code", "text": "use_modular_headers!"}, {"type": "a", "text": "use_frameworks!"}, {"type": "code", "text": "use_frameworks!"}, {"type": "p", "text": "Search paths for libraries added in the Kotlin/Native module in this way are obtained\nfrom properties of the Xcode projects configured by CocoaPods. Thus if the module uses\nCocoaPods libraries, it can be build only from Xcode."}, {"type": "strong", "text": "only"}, {"type": "strong", "text": "from"}, {"type": "strong", "text": "Xcode"}, {"type": "h2", "text": "Current Limitations"}, {"type": "ul", "text": "\nIf a Kotlin/Native module uses a CocoaPods library, you can built this module only from an Xcode project.\n Otherwise the CocoaPods library cannot be resolved by the Kotlin/Native infrastructure.\n"}, {"type": "li", "text": "If a Kotlin/Native module uses a CocoaPods library, you can built this module only from an Xcode project.\n Otherwise the CocoaPods library cannot be resolved by the Kotlin/Native infrastructure."}]