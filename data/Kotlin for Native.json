[{"type": "a", "text": "\n\nEdit Page\n"}, {"type": "i", "text": ""}, {"type": "span", "text": "Edit Page"}, {"type": "h1", "text": "Kotlin/Native for Native"}, {"type": "strong", "text": "Kotlin/Native for Native"}, {"type": "p", "text": ""}, {"type": "img", "text": ""}, {"type": "p", "text": "Kotlin/Native is a technology for compiling Kotlin code to native binaries, which can run without a virtual machine.\nIt is an LLVM based backend for the Kotlin compiler and native implementation of the Kotlin standard\nlibrary."}, {"type": "a", "text": "LLVM"}, {"type": "h2", "text": "Why Kotlin/Native?"}, {"type": "p", "text": "Kotlin/Native is primarily designed to allow compilation for platforms where virtual machines are not\ndesirable or possible, for example, embedded devices or iOS.\nIt solves the situations when a developer needs to produce a \nself-contained program that does not require an additional runtime or virtual machine."}, {"type": "em", "text": "virtual machines"}, {"type": "h2", "text": "Target Platforms"}, {"type": "p", "text": "Kotlin/Native supports the following platforms:"}, {"type": "ul", "text": "\niOS (arm32, arm64, simulator x86_64)\nmacOS (x86_64)\nwatchOS (arm32, arm64, x86)\ntvOS (arm64, x86_64)\nAndroid (arm32, arm64, x86, x86_64)\nWindows (mingw x86_64, x86)\nLinux (x86_64, arm32, arm64, MIPS, MIPS little endian)\nWebAssembly (wasm32)\n"}, {"type": "li", "text": "iOS (arm32, arm64, simulator x86_64)"}, {"type": "li", "text": "macOS (x86_64)"}, {"type": "li", "text": "watchOS (arm32, arm64, x86)"}, {"type": "li", "text": "tvOS (arm64, x86_64)"}, {"type": "li", "text": "Android (arm32, arm64, x86, x86_64)"}, {"type": "li", "text": "Windows (mingw x86_64, x86)"}, {"type": "li", "text": "Linux (x86_64, arm32, arm64, MIPS, MIPS little endian)"}, {"type": "li", "text": "WebAssembly (wasm32)"}, {"type": "h2", "text": "Interoperability"}, {"type": "p", "text": "Kotlin/Native supports two-way interoperability with the Native world. \nOn the one hand, the compiler creates:"}, {"type": "ul", "text": "\nan executable for many platforms\na static library or dynamic library with C headers for C/C++ projects\nan Apple framework for Swift and Objective-C projects\n"}, {"type": "li", "text": "an executable for many platforms"}, {"type": "a", "text": "platforms"}, {"type": "li", "text": "a static library or dynamic library with C headers for C/C++ projects"}, {"type": "a", "text": "dynamic"}, {"type": "li", "text": "an Apple framework for Swift and Objective-C projects"}, {"type": "a", "text": "Apple framework"}, {"type": "p", "text": "On the other hand, Kotlin/Native supports interoperability to use existing libraries\ndirectly from Kotlin/Native:"}, {"type": "ul", "text": "\nstatic or dynamic C Libraries\nC, Swift, and Objective-C frameworks\n"}, {"type": "li", "text": "static or dynamic C Libraries"}, {"type": "a", "text": "C Libraries"}, {"type": "li", "text": "C, Swift, and Objective-C frameworks"}, {"type": "a", "text": "Swift, and Objective-C"}, {"type": "p", "text": "It is easy to include a compiled Kotlin code into\nexisting projects written in C, C++, Swift, Objective-C, and other languages.\nIt is also easy to use existing native code, \nstatic or dynamic C libraries,\nSwift/Objective-C frameworks,\ngraphical engines, and anything else directly from Kotlin/Native."}, {"type": "a", "text": "C libraries"}, {"type": "a", "text": "frameworks"}, {"type": "p", "text": "Kotlin/Native libraries help to share Kotlin\ncode between projects.\nPOSIX, gzip, OpenGL, Metal, Foundation, and many other popular libraries and Apple frameworks\nare pre-imported and included as Kotlin/Native libraries into the compiler package."}, {"type": "a", "text": "libraries"}, {"type": "h2", "text": "Sharing Code between Platforms"}, {"type": "p", "text": "Multiplatform projects are supported between different Kotlin and\nKotlin/Native targets.\nThis is the way to share common Kotlin code between many platforms, including Android, iOS, server-side, JVM, client-side, \nJavaScript, CSS, and native."}, {"type": "a", "text": "Multiplatform projects"}, {"type": "p", "text": "Multiplatform libraries\nprovide the necessary APIs for the common Kotlin code and help to develop\nshared parts of a project in Kotlin code once and share it with all of the target platforms."}, {"type": "a", "text": "Multiplatform libraries"}, {"type": "h2", "text": "How to Start"}, {"type": "div", "text": "\n\nTutorials and Documentation\n"}, {"type": "img", "text": ""}, {"type": "b", "text": "Tutorials and Documentation"}, {"type": "p", "text": "New to Kotlin? Take a look at the Getting Started page."}, {"type": "a", "text": "Getting Started"}, {"type": "p", "text": "Suggested documentation pages:"}, {"type": "ul", "text": "\nC interop\nSwift/Objective-C interop\n"}, {"type": "li", "text": "C interop"}, {"type": "a", "text": "C interop"}, {"type": "li", "text": "Swift/Objective-C interop"}, {"type": "a", "text": "Swift/Objective-C interop"}, {"type": "p", "text": "Recommended tutorials:"}, {"type": "ul", "text": "\nHello Kotlin/Native\nMultiplatform Project: iOS and Android\nTypes mapping between C and Kotlin/Native\nKotlin/Native as a Dynamic Library\nKotlin/Native as an Apple Framework\n"}, {"type": "li", "text": "Hello Kotlin/Native"}, {"type": "a", "text": "Hello Kotlin/Native"}, {"type": "li", "text": "Multiplatform Project: iOS and Android"}, {"type": "a", "text": "Multiplatform Project: iOS and Android"}, {"type": "li", "text": "Types mapping between C and Kotlin/Native"}, {"type": "a", "text": "Types mapping between C and Kotlin/Native"}, {"type": "li", "text": "Kotlin/Native as a Dynamic Library"}, {"type": "a", "text": "Kotlin/Native as a Dynamic Library"}, {"type": "li", "text": "Kotlin/Native as an Apple Framework"}, {"type": "a", "text": "Kotlin/Native as an Apple Framework"}, {"type": "div", "text": "\n\nExample Projects\n"}, {"type": "img", "text": ""}, {"type": "b", "text": "Example Projects"}, {"type": "ul", "text": "\nKotlin/Native sources and examples\nKotlinConf app\nKotlinConf Spinner app\nKotlin/Native sources and examples (.tgz)\nKotlin/Native sources and examples (.zip)\n"}, {"type": "li", "text": "Kotlin/Native sources and examples"}, {"type": "a", "text": "Kotlin/Native sources and examples"}, {"type": "li", "text": "KotlinConf app"}, {"type": "a", "text": "KotlinConf app"}, {"type": "li", "text": "KotlinConf Spinner app"}, {"type": "a", "text": "KotlinConf Spinner app"}, {"type": "li", "text": "Kotlin/Native sources and examples (.tgz)"}, {"type": "a", "text": "Kotlin/Native sources and examples (.tgz)"}, {"type": "li", "text": "Kotlin/Native sources and examples (.zip)"}, {"type": "a", "text": "Kotlin/Native sources and examples (.zip)"}, {"type": "p", "text": "Even more examples are on GitHub."}, {"type": "a", "text": "GitHub"}]