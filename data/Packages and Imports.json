[{"type": "a", "text": "\n\nEdit Page\n"}, {"type": "i", "text": ""}, {"type": "span", "text": "Edit Page"}, {"type": "h1", "text": "Packages"}, {"type": "p", "text": "A source file may start with a package declaration:"}, {"type": "div", "text": "\npackage org.example\n\nfun printMessage() { /*...*/ }\nclass Message { /*...*/ }\n\n// ...\n\n"}, {"type": "pre", "text": "package org.example\n\nfun printMessage() { /*...*/ }\nclass Message { /*...*/ }\n\n// ...\n"}, {"type": "code", "text": "package org.example\n\nfun printMessage() { /*...*/ }\nclass Message { /*...*/ }\n\n// ...\n"}, {"type": "p", "text": "All the contents (such as classes and functions) of the source file are contained by the package declared.\nSo, in the example above, the full name of printMessage() is org.example.printMessage,\nand the full name of Message is org.example.Message."}, {"type": "code", "text": "printMessage()"}, {"type": "code", "text": "org.example.printMessage"}, {"type": "code", "text": "Message"}, {"type": "code", "text": "org.example.Message"}, {"type": "p", "text": "If the package is not specified, the contents of such a file belong to the default package that has no name."}, {"type": "h2", "text": "Default Imports"}, {"type": "p", "text": "A number of packages are imported into every Kotlin file by default:"}, {"type": "ul", "text": "\nkotlin.*\nkotlin.annotation.*\nkotlin.collections.*\nkotlin.comparisons.*  (since 1.1)\nkotlin.io.*\nkotlin.ranges.*\nkotlin.sequences.*\nkotlin.text.*\n"}, {"type": "li", "text": "kotlin.*"}, {"type": "a", "text": "kotlin.*"}, {"type": "li", "text": "kotlin.annotation.*"}, {"type": "a", "text": "kotlin.annotation.*"}, {"type": "li", "text": "kotlin.collections.*"}, {"type": "a", "text": "kotlin.collections.*"}, {"type": "li", "text": "kotlin.comparisons.*  (since 1.1)"}, {"type": "a", "text": "kotlin.comparisons.*"}, {"type": "li", "text": "kotlin.io.*"}, {"type": "a", "text": "kotlin.io.*"}, {"type": "li", "text": "kotlin.ranges.*"}, {"type": "a", "text": "kotlin.ranges.*"}, {"type": "li", "text": "kotlin.sequences.*"}, {"type": "a", "text": "kotlin.sequences.*"}, {"type": "li", "text": "kotlin.text.*"}, {"type": "a", "text": "kotlin.text.*"}, {"type": "p", "text": "Additional packages are imported depending on the target platform:"}, {"type": "ul", "text": "\nJVM:\n    \njava.lang.*\nkotlin.jvm.*\n\n\nJS:\n    \nkotlin.js.*\n\n\n"}, {"type": "li", "text": "JVM:\n    \njava.lang.*\nkotlin.jvm.*\n\n"}, {"type": "ul", "text": "\njava.lang.*\nkotlin.jvm.*\n"}, {"type": "li", "text": "java.lang.*"}, {"type": "li", "text": "kotlin.jvm.*"}, {"type": "a", "text": "kotlin.jvm.*"}, {"type": "li", "text": "JS:\n    \nkotlin.js.*\n\n"}, {"type": "ul", "text": "\nkotlin.js.*\n"}, {"type": "li", "text": "kotlin.js.*"}, {"type": "a", "text": "kotlin.js.*"}, {"type": "h2", "text": "Imports"}, {"type": "p", "text": "Apart from the default imports, each file may contain its own import directives.\nSyntax for imports is described in the grammar."}, {"type": "a", "text": "grammar"}, {"type": "p", "text": "We can import either a single name, e.g."}, {"type": "div", "text": "\nimport org.example.Message // Message is now accessible without qualification\n\n"}, {"type": "pre", "text": "import org.example.Message // Message is now accessible without qualification\n"}, {"type": "code", "text": "import org.example.Message // Message is now accessible without qualification\n"}, {"type": "p", "text": "or all the accessible contents of a scope (package, class, object etc):"}, {"type": "div", "text": "\nimport org.example.* // everything in 'org.example' becomes accessible\n\n"}, {"type": "pre", "text": "import org.example.* // everything in 'org.example' becomes accessible\n"}, {"type": "code", "text": "import org.example.* // everything in 'org.example' becomes accessible\n"}, {"type": "p", "text": "If there is a name clash, we can disambiguate by using as keyword to locally rename the clashing entity:"}, {"type": "em", "text": "as"}, {"type": "div", "text": "\nimport org.example.Message // Message is accessible\nimport org.test.Message as testMessage // testMessage stands for 'org.test.Message'\n\n"}, {"type": "pre", "text": "import org.example.Message // Message is accessible\nimport org.test.Message as testMessage // testMessage stands for 'org.test.Message'\n"}, {"type": "code", "text": "import org.example.Message // Message is accessible\nimport org.test.Message as testMessage // testMessage stands for 'org.test.Message'\n"}, {"type": "p", "text": "The import keyword is not restricted to importing classes; you can also use it to import other declarations:"}, {"type": "code", "text": "import"}, {"type": "ul", "text": "\ntop-level functions and properties;\nfunctions and properties declared in object declarations;\nenum constants.\n"}, {"type": "li", "text": "top-level functions and properties;"}, {"type": "li", "text": "functions and properties declared in object declarations;"}, {"type": "a", "text": "object declarations"}, {"type": "li", "text": "enum constants."}, {"type": "a", "text": "enum constants"}, {"type": "h2", "text": "Visibility of Top-level Declarations"}, {"type": "p", "text": "If a top-level declaration is marked private, it is private to the file it's declared in (see Visibility Modifiers)."}, {"type": "em", "text": "private"}, {"type": "a", "text": "Visibility Modifiers"}]