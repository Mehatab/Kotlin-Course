[{"type": "a", "text": "\n\nEdit Page\n"}, {"type": "i", "text": ""}, {"type": "span", "text": "Edit Page"}, {"type": "p", "text": "Kotlin, as a language, provides only minimal low-level APIs in its standard library to enable various other \nlibraries to utilize coroutines. Unlike many other languages with similar capabilities, async and await\nare not keywords in Kotlin and are not even part of its standard library. Moreover, Kotlin's concept\nof suspending function provides a safer and less error-prone abstraction for asynchronous \noperations than futures and promises."}, {"type": "code", "text": "async"}, {"type": "code", "text": "await"}, {"type": "em", "text": "suspending function"}, {"type": "p", "text": "kotlinx.coroutines is a rich library for coroutines developed by JetBrains. It contains a number of high-level \ncoroutine-enabled primitives that this guide covers, including launch, async and others."}, {"type": "code", "text": "kotlinx.coroutines"}, {"type": "code", "text": "launch"}, {"type": "code", "text": "async"}, {"type": "p", "text": "This is a guide on core features of kotlinx.coroutines with a series of examples, divided up into different topics."}, {"type": "code", "text": "kotlinx.coroutines"}, {"type": "p", "text": "In order to use coroutines as well as follow the examples in this guide, you need to add a dependency on kotlinx-coroutines-core module as explained \nin the project README."}, {"type": "code", "text": "kotlinx-coroutines-core"}, {"type": "a", "text": "in the project README"}, {"type": "h2", "text": "Table of contents"}, {"type": "ul", "text": "\nBasics\nCancellation and Timeouts\nComposing Suspending Functions\nCoroutine Context and Dispatchers\nAsynchronous Flow\nChannels\nException Handling and Supervision\nShared Mutable State and Concurrency\nSelect Expression (experimental)\n"}, {"type": "li", "text": "Basics"}, {"type": "a", "text": "Basics"}, {"type": "li", "text": "Cancellation and Timeouts"}, {"type": "a", "text": "Cancellation and Timeouts"}, {"type": "li", "text": "Composing Suspending Functions"}, {"type": "a", "text": "Composing Suspending Functions"}, {"type": "li", "text": "Coroutine Context and Dispatchers"}, {"type": "a", "text": "Coroutine Context and Dispatchers"}, {"type": "li", "text": "Asynchronous Flow"}, {"type": "a", "text": "Asynchronous Flow"}, {"type": "li", "text": "Channels"}, {"type": "a", "text": "Channels"}, {"type": "li", "text": "Exception Handling and Supervision"}, {"type": "a", "text": "Exception Handling and Supervision"}, {"type": "li", "text": "Shared Mutable State and Concurrency"}, {"type": "a", "text": "Shared Mutable State and Concurrency"}, {"type": "li", "text": "Select Expression (experimental)"}, {"type": "a", "text": "Select Expression (experimental)"}, {"type": "h2", "text": "Additional references"}, {"type": "ul", "text": "\nGuide to UI programming with coroutines\nCoroutines design document (KEEP)\nFull kotlinx.coroutines API reference\n"}, {"type": "li", "text": "Guide to UI programming with coroutines"}, {"type": "a", "text": "Guide to UI programming with coroutines"}, {"type": "li", "text": "Coroutines design document (KEEP)"}, {"type": "a", "text": "Coroutines design document (KEEP)"}, {"type": "li", "text": "Full kotlinx.coroutines API reference"}, {"type": "a", "text": "Full kotlinx.coroutines API reference"}]