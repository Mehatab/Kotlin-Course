[{"type": "a", "text": "\n\nEdit Page\n"}, {"type": "i", "text": ""}, {"type": "span", "text": "Edit Page"}, {"type": "h1", "text": "This Expression"}, {"type": "p", "text": "To denote the current receiver, we use this expressions:"}, {"type": "em", "text": "receiver"}, {"type": "em", "text": "this"}, {"type": "ul", "text": "\nIn a member of a class, this refers to the current object of that class.\nIn an extension function or a function literal with receiver\nthis denotes the receiver parameter that is passed on the left-hand side of a dot.\n"}, {"type": "li", "text": "In a member of a class, this refers to the current object of that class."}, {"type": "a", "text": "class"}, {"type": "em", "text": "this"}, {"type": "li", "text": "In an extension function or a function literal with receiver\nthis denotes the receiver parameter that is passed on the left-hand side of a dot."}, {"type": "a", "text": "extension function"}, {"type": "a", "text": "function literal with receiver"}, {"type": "em", "text": "this"}, {"type": "em", "text": "receiver"}, {"type": "p", "text": "If this has no qualifiers, it refers to the innermost enclosing scope. To refer to this in other scopes, label qualifiers are used:"}, {"type": "em", "text": "this"}, {"type": "em", "text": "innermost enclosing scope"}, {"type": "em", "text": "this"}, {"type": "em", "text": "label qualifiers"}, {"type": "h2", "text": "Qualified this"}, {"type": "em", "text": "this"}, {"type": "p", "text": "To access this from an outer scope (a class, or extension function,\nor labeled function literal with receiver) we write this@label where @label is a label\non the scope this is meant to be from:"}, {"type": "em", "text": "this"}, {"type": "a", "text": "class"}, {"type": "a", "text": "extension function"}, {"type": "a", "text": "function literal with receiver"}, {"type": "code", "text": "this@label"}, {"type": "code", "text": "@label"}, {"type": "a", "text": "label"}, {"type": "em", "text": "this"}, {"type": "div", "text": "\nclass A { // implicit label @A\n    inner class B { // implicit label @B\n        fun Int.foo() { // implicit label @foo\n            val a = this@A // A's this\n            val b = this@B // B's this\n\n            val c = this // foo()'s receiver, an Int\n            val c1 = this@foo // foo()'s receiver, an Int\n\n            val funLit = lambda@ fun String.() {\n                val d = this // funLit's receiver\n            }\n\n\n            val funLit2 = { s: String ->\n                // foo()'s receiver, since enclosing lambda expression\n                // doesn't have any receiver\n                val d1 = this\n            }\n        }\n    }\n}\n\n"}, {"type": "pre", "text": "class A { // implicit label @A\n    inner class B { // implicit label @B\n        fun Int.foo() { // implicit label @foo\n            val a = this@A // A's this\n            val b = this@B // B's this\n\n            val c = this // foo()'s receiver, an Int\n            val c1 = this@foo // foo()'s receiver, an Int\n\n            val funLit = lambda@ fun String.() {\n                val d = this // funLit's receiver\n            }\n\n\n            val funLit2 = { s: String ->\n                // foo()'s receiver, since enclosing lambda expression\n                // doesn't have any receiver\n                val d1 = this\n            }\n        }\n    }\n}\n"}, {"type": "code", "text": "class A { // implicit label @A\n    inner class B { // implicit label @B\n        fun Int.foo() { // implicit label @foo\n            val a = this@A // A's this\n            val b = this@B // B's this\n\n            val c = this // foo()'s receiver, an Int\n            val c1 = this@foo // foo()'s receiver, an Int\n\n            val funLit = lambda@ fun String.() {\n                val d = this // funLit's receiver\n            }\n\n\n            val funLit2 = { s: String ->\n                // foo()'s receiver, since enclosing lambda expression\n                // doesn't have any receiver\n                val d1 = this\n            }\n        }\n    }\n}\n"}]