[{"type": "a", "text": "\n\nEdit Page\n"}, {"type": "i", "text": ""}, {"type": "span", "text": "Edit Page"}, {"type": "h1", "text": "Using Maven"}, {"type": "h2", "text": "Plugin and Versions"}, {"type": "p", "text": "The kotlin-maven-plugin compiles Kotlin sources and modules. Currently only Maven v3 is supported."}, {"type": "em", "text": "kotlin-maven-plugin"}, {"type": "p", "text": "Define the version of Kotlin you want to use via a kotlin.version property:"}, {"type": "em", "text": "kotlin.version"}, {"type": "div", "text": "\n<properties>\n    <kotlin.version>1.3.72</kotlin.version>\n</properties>\n\n"}, {"type": "pre", "text": "<properties>\n    <kotlin.version>1.3.72</kotlin.version>\n</properties>\n"}, {"type": "code", "text": "<properties>\n    <kotlin.version>1.3.72</kotlin.version>\n</properties>\n"}, {"type": "h2", "text": "Dependencies"}, {"type": "p", "text": "Kotlin has an extensive standard library that can be used in your applications. Configure the following dependency in the pom file:"}, {"type": "div", "text": "\n<dependencies>\n    <dependency>\n        <groupId>org.jetbrains.kotlin</groupId>\n        <artifactId>kotlin-stdlib</artifactId>\n        <version>${kotlin.version}</version>\n    </dependency>\n</dependencies>\n\n"}, {"type": "pre", "text": "<dependencies>\n    <dependency>\n        <groupId>org.jetbrains.kotlin</groupId>\n        <artifactId>kotlin-stdlib</artifactId>\n        <version>${kotlin.version}</version>\n    </dependency>\n</dependencies>\n"}, {"type": "code", "text": "<dependencies>\n    <dependency>\n        <groupId>org.jetbrains.kotlin</groupId>\n        <artifactId>kotlin-stdlib</artifactId>\n        <version>${kotlin.version}</version>\n    </dependency>\n</dependencies>\n"}, {"type": "p", "text": "If you're targeting JDK 7 or JDK 8, you can use extended versions of the Kotlin standard library which contain\nadditional extension functions for APIs added in new JDK versions. Instead of kotlin-stdlib, use kotlin-stdlib-jdk7\nor kotlin-stdlib-jdk8, depending on your JDK version (for Kotlin 1.1.x use kotlin-stdlib-jre7 and kotlin-stdlib-jre8 as the jdk counterparts were introduced in 1.2.0)."}, {"type": "code", "text": "kotlin-stdlib"}, {"type": "code", "text": "kotlin-stdlib-jdk7"}, {"type": "code", "text": "kotlin-stdlib-jdk8"}, {"type": "code", "text": "kotlin-stdlib-jre7"}, {"type": "code", "text": "kotlin-stdlib-jre8"}, {"type": "code", "text": "jdk"}, {"type": "p", "text": "If your project uses Kotlin reflection or testing facilities, you need to add the corresponding dependencies as well.\nThe artifact IDs are kotlin-reflect for the reflection library, and kotlin-test and kotlin-test-junit\nfor the testing libraries."}, {"type": "a", "text": "Kotlin reflection"}, {"type": "code", "text": "kotlin-reflect"}, {"type": "code", "text": "kotlin-test"}, {"type": "code", "text": "kotlin-test-junit"}, {"type": "h2", "text": "Compiling Kotlin only source code"}, {"type": "p", "text": "To compile source code, specify the source directories in the  tag:"}, {"type": "build", "text": " tag:"}, {"type": "div", "text": "\n<build>\n    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>\n    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>\n</build>\n\n"}, {"type": "pre", "text": "<build>\n    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>\n    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>\n</build>\n"}, {"type": "code", "text": "<build>\n    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>\n    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>\n</build>\n"}, {"type": "p", "text": "The Kotlin Maven Plugin needs to be referenced to compile the sources:"}, {"type": "div", "text": "\n<build>\n    <plugins>\n        <plugin>\n            <groupId>org.jetbrains.kotlin</groupId>\n            <artifactId>kotlin-maven-plugin</artifactId>\n            <version>${kotlin.version}</version>\n\n            <executions>\n                <execution>\n                    <id>compile</id>\n                    <goals> <goal>compile</goal> </goals>\n                </execution>\n\n                <execution>\n                    <id>test-compile</id>\n                    <goals> <goal>test-compile</goal> </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n</build>\n\n"}, {"type": "pre", "text": "<build>\n    <plugins>\n        <plugin>\n            <groupId>org.jetbrains.kotlin</groupId>\n            <artifactId>kotlin-maven-plugin</artifactId>\n            <version>${kotlin.version}</version>\n\n            <executions>\n                <execution>\n                    <id>compile</id>\n                    <goals> <goal>compile</goal> </goals>\n                </execution>\n\n                <execution>\n                    <id>test-compile</id>\n                    <goals> <goal>test-compile</goal> </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n</build>\n"}, {"type": "code", "text": "<build>\n    <plugins>\n        <plugin>\n            <groupId>org.jetbrains.kotlin</groupId>\n            <artifactId>kotlin-maven-plugin</artifactId>\n            <version>${kotlin.version}</version>\n\n            <executions>\n                <execution>\n                    <id>compile</id>\n                    <goals> <goal>compile</goal> </goals>\n                </execution>\n\n                <execution>\n                    <id>test-compile</id>\n                    <goals> <goal>test-compile</goal> </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n</build>\n"}, {"type": "h2", "text": "Compiling Kotlin and Java sources"}, {"type": "p", "text": "To compile mixed code applications Kotlin compiler should be invoked before Java compiler.\nIn maven terms that means kotlin-maven-plugin should be run before maven-compiler-plugin using the following method, making sure that the kotlin plugin is above the maven-compiler-plugin in your pom.xml file:"}, {"type": "div", "text": "\n<build>\n    <plugins>\n        <plugin>\n            <groupId>org.jetbrains.kotlin</groupId>\n            <artifactId>kotlin-maven-plugin</artifactId>\n            <version>${kotlin.version}</version>\n            <executions>\n                <execution>\n                    <id>compile</id>\n                    <goals> <goal>compile</goal> </goals>\n                    <configuration>\n                        <sourceDirs>\n                            <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>\n                            <sourceDir>${project.basedir}/src/main/java</sourceDir>\n                        </sourceDirs>\n                    </configuration>\n                </execution>\n                <execution>\n                    <id>test-compile</id>\n                    <goals> <goal>test-compile</goal> </goals>\n                    <configuration>\n                        <sourceDirs>\n                            <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>\n                            <sourceDir>${project.basedir}/src/test/java</sourceDir>\n                        </sourceDirs>\n                    </configuration>\n                </execution>\n            </executions>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>3.5.1</version>\n            <executions>\n                <!-- Replacing default-compile as it is treated specially by maven -->\n                <execution>\n                    <id>default-compile</id>\n                    <phase>none</phase>\n                </execution>\n                <!-- Replacing default-testCompile as it is treated specially by maven -->\n                <execution>\n                    <id>default-testCompile</id>\n                    <phase>none</phase>\n                </execution>\n                <execution>\n                    <id>java-compile</id>\n                    <phase>compile</phase>\n                    <goals> <goal>compile</goal> </goals>\n                </execution>\n                <execution>\n                    <id>java-test-compile</id>\n                    <phase>test-compile</phase>\n                    <goals> <goal>testCompile</goal> </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n</build>\n\n"}, {"type": "pre", "text": "<build>\n    <plugins>\n        <plugin>\n            <groupId>org.jetbrains.kotlin</groupId>\n            <artifactId>kotlin-maven-plugin</artifactId>\n            <version>${kotlin.version}</version>\n            <executions>\n                <execution>\n                    <id>compile</id>\n                    <goals> <goal>compile</goal> </goals>\n                    <configuration>\n                        <sourceDirs>\n                            <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>\n                            <sourceDir>${project.basedir}/src/main/java</sourceDir>\n                        </sourceDirs>\n                    </configuration>\n                </execution>\n                <execution>\n                    <id>test-compile</id>\n                    <goals> <goal>test-compile</goal> </goals>\n                    <configuration>\n                        <sourceDirs>\n                            <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>\n                            <sourceDir>${project.basedir}/src/test/java</sourceDir>\n                        </sourceDirs>\n                    </configuration>\n                </execution>\n            </executions>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>3.5.1</version>\n            <executions>\n                <!-- Replacing default-compile as it is treated specially by maven -->\n                <execution>\n                    <id>default-compile</id>\n                    <phase>none</phase>\n                </execution>\n                <!-- Replacing default-testCompile as it is treated specially by maven -->\n                <execution>\n                    <id>default-testCompile</id>\n                    <phase>none</phase>\n                </execution>\n                <execution>\n                    <id>java-compile</id>\n                    <phase>compile</phase>\n                    <goals> <goal>compile</goal> </goals>\n                </execution>\n                <execution>\n                    <id>java-test-compile</id>\n                    <phase>test-compile</phase>\n                    <goals> <goal>testCompile</goal> </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n</build>\n"}, {"type": "code", "text": "<build>\n    <plugins>\n        <plugin>\n            <groupId>org.jetbrains.kotlin</groupId>\n            <artifactId>kotlin-maven-plugin</artifactId>\n            <version>${kotlin.version}</version>\n            <executions>\n                <execution>\n                    <id>compile</id>\n                    <goals> <goal>compile</goal> </goals>\n                    <configuration>\n                        <sourceDirs>\n                            <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>\n                            <sourceDir>${project.basedir}/src/main/java</sourceDir>\n                        </sourceDirs>\n                    </configuration>\n                </execution>\n                <execution>\n                    <id>test-compile</id>\n                    <goals> <goal>test-compile</goal> </goals>\n                    <configuration>\n                        <sourceDirs>\n                            <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>\n                            <sourceDir>${project.basedir}/src/test/java</sourceDir>\n                        </sourceDirs>\n                    </configuration>\n                </execution>\n            </executions>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>3.5.1</version>\n            <executions>\n                <!-- Replacing default-compile as it is treated specially by maven -->\n                <execution>\n                    <id>default-compile</id>\n                    <phase>none</phase>\n                </execution>\n                <!-- Replacing default-testCompile as it is treated specially by maven -->\n                <execution>\n                    <id>default-testCompile</id>\n                    <phase>none</phase>\n                </execution>\n                <execution>\n                    <id>java-compile</id>\n                    <phase>compile</phase>\n                    <goals> <goal>compile</goal> </goals>\n                </execution>\n                <execution>\n                    <id>java-test-compile</id>\n                    <phase>test-compile</phase>\n                    <goals> <goal>testCompile</goal> </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n</build>\n"}, {"type": "h2", "text": "Incremental compilation"}, {"type": "p", "text": "To make your builds faster, you can enable incremental compilation for Maven (supported since Kotlin 1.1.2).\nIn order to do that, define the kotlin.compiler.incremental property:"}, {"type": "code", "text": "kotlin.compiler.incremental"}, {"type": "div", "text": "\n<properties>\n    <kotlin.compiler.incremental>true</kotlin.compiler.incremental>\n</properties>\n\n"}, {"type": "pre", "text": "<properties>\n    <kotlin.compiler.incremental>true</kotlin.compiler.incremental>\n</properties>\n"}, {"type": "code", "text": "<properties>\n    <kotlin.compiler.incremental>true</kotlin.compiler.incremental>\n</properties>\n"}, {"type": "p", "text": "Alternatively, run your build with the -Dkotlin.compiler.incremental=true option."}, {"type": "code", "text": "-Dkotlin.compiler.incremental=true"}, {"type": "h2", "text": "Annotation processing"}, {"type": "p", "text": "See the description of Kotlin annotation processing tool (kapt)."}, {"type": "a", "text": "Kotlin annotation processing tool"}, {"type": "code", "text": "kapt"}, {"type": "h2", "text": "Coroutines support"}, {"type": "p", "text": "Coroutines support is an experimental feature in Kotlin 1.2, so the Kotlin compiler reports a warning when you use coroutines in your project.\nTo turn off the warning, add the following block to your pom.xml file:"}, {"type": "a", "text": "Coroutines"}, {"type": "code", "text": "pom.xml"}, {"type": "div", "text": "\n<configuration>\n    <experimentalCoroutines>enable</experimentalCoroutines>\n</configuration>\n\n"}, {"type": "pre", "text": "<configuration>\n    <experimentalCoroutines>enable</experimentalCoroutines>\n</configuration>\n"}, {"type": "code", "text": "<configuration>\n    <experimentalCoroutines>enable</experimentalCoroutines>\n</configuration>\n"}, {"type": "h2", "text": "Jar file"}, {"type": "p", "text": "To create a small Jar file containing just the code from your module, include the following under build->plugins in your Maven pom.xml file,\nwhere main.class is defined as a property and points to the main Kotlin or Java class:"}, {"type": "code", "text": "build->plugins"}, {"type": "code", "text": "main.class"}, {"type": "div", "text": "\n<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-jar-plugin</artifactId>\n    <version>2.6</version>\n    <configuration>\n        <archive>\n            <manifest>\n                <addClasspath>true</addClasspath>\n                <mainClass>${main.class}</mainClass>\n            </manifest>\n        </archive>\n    </configuration>\n</plugin>\n\n"}, {"type": "pre", "text": "<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-jar-plugin</artifactId>\n    <version>2.6</version>\n    <configuration>\n        <archive>\n            <manifest>\n                <addClasspath>true</addClasspath>\n                <mainClass>${main.class}</mainClass>\n            </manifest>\n        </archive>\n    </configuration>\n</plugin>\n"}, {"type": "code", "text": "<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-jar-plugin</artifactId>\n    <version>2.6</version>\n    <configuration>\n        <archive>\n            <manifest>\n                <addClasspath>true</addClasspath>\n                <mainClass>${main.class}</mainClass>\n            </manifest>\n        </archive>\n    </configuration>\n</plugin>\n"}, {"type": "h2", "text": "Self-contained Jar file"}, {"type": "p", "text": "To create a self-contained Jar file containing the code from your module along with dependencies, include the following under build->plugins in your Maven pom.xml file,\nwhere main.class is defined as a property and points to the main Kotlin or Java class:"}, {"type": "code", "text": "build->plugins"}, {"type": "code", "text": "main.class"}, {"type": "div", "text": "\n<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-assembly-plugin</artifactId>\n    <version>2.6</version>\n    <executions>\n        <execution>\n            <id>make-assembly</id>\n            <phase>package</phase>\n            <goals> <goal>single</goal> </goals>\n            <configuration>\n                <archive>\n                    <manifest>\n                        <mainClass>${main.class}</mainClass>\n                    </manifest>\n                </archive>\n                <descriptorRefs>\n                    <descriptorRef>jar-with-dependencies</descriptorRef>\n                </descriptorRefs>\n            </configuration>\n        </execution>\n    </executions>\n</plugin>\n\n"}, {"type": "pre", "text": "<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-assembly-plugin</artifactId>\n    <version>2.6</version>\n    <executions>\n        <execution>\n            <id>make-assembly</id>\n            <phase>package</phase>\n            <goals> <goal>single</goal> </goals>\n            <configuration>\n                <archive>\n                    <manifest>\n                        <mainClass>${main.class}</mainClass>\n                    </manifest>\n                </archive>\n                <descriptorRefs>\n                    <descriptorRef>jar-with-dependencies</descriptorRef>\n                </descriptorRefs>\n            </configuration>\n        </execution>\n    </executions>\n</plugin>\n"}, {"type": "code", "text": "<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-assembly-plugin</artifactId>\n    <version>2.6</version>\n    <executions>\n        <execution>\n            <id>make-assembly</id>\n            <phase>package</phase>\n            <goals> <goal>single</goal> </goals>\n            <configuration>\n                <archive>\n                    <manifest>\n                        <mainClass>${main.class}</mainClass>\n                    </manifest>\n                </archive>\n                <descriptorRefs>\n                    <descriptorRef>jar-with-dependencies</descriptorRef>\n                </descriptorRefs>\n            </configuration>\n        </execution>\n    </executions>\n</plugin>\n"}, {"type": "p", "text": "This self-contained jar file can be passed directly to a JRE to run your application:"}, {"type": "pre", "text": "java -jar target/mymodule-0.0.1-SNAPSHOT-jar-with-dependencies.jar\n"}, {"type": "code", "text": "java -jar target/mymodule-0.0.1-SNAPSHOT-jar-with-dependencies.jar\n"}, {"type": "h2", "text": "Specifying compiler options"}, {"type": "p", "text": "Additional options and arguments for the compiler can be specified as tags under the <configuration> element of the\nMaven plugin node:"}, {"type": "code", "text": "<configuration>"}, {"type": "div", "text": "\n<plugin>\n    <groupId>org.jetbrains.kotlin</groupId>\n    <artifactId>kotlin-maven-plugin</artifactId>\n    <version>${kotlin.version}</version>\n    <executions>...</executions>\n    <configuration>\n        <nowarn>true</nowarn>  <!-- Disable warnings -->\n        <args>\n            <arg>-Xjsr305=strict</arg> <!-- Enable strict mode for JSR-305 annotations -->\n            ...\n        </args>\n    </configuration>\n</plugin>\n\n"}, {"type": "pre", "text": "<plugin>\n    <groupId>org.jetbrains.kotlin</groupId>\n    <artifactId>kotlin-maven-plugin</artifactId>\n    <version>${kotlin.version}</version>\n    <executions>...</executions>\n    <configuration>\n        <nowarn>true</nowarn>  <!-- Disable warnings -->\n        <args>\n            <arg>-Xjsr305=strict</arg> <!-- Enable strict mode for JSR-305 annotations -->\n            ...\n        </args>\n    </configuration>\n</plugin>\n"}, {"type": "code", "text": "<plugin>\n    <groupId>org.jetbrains.kotlin</groupId>\n    <artifactId>kotlin-maven-plugin</artifactId>\n    <version>${kotlin.version}</version>\n    <executions>...</executions>\n    <configuration>\n        <nowarn>true</nowarn>  <!-- Disable warnings -->\n        <args>\n            <arg>-Xjsr305=strict</arg> <!-- Enable strict mode for JSR-305 annotations -->\n            ...\n        </args>\n    </configuration>\n</plugin>\n"}, {"type": "p", "text": "Many of the options can also be configured through properties:"}, {"type": "div", "text": "\n<project ...>\n    <properties>\n        <kotlin.compiler.languageVersion>1.0</kotlin.compiler.languageVersion>\n    </properties>\n</project>\n\n"}, {"type": "pre", "text": "<project ...>\n    <properties>\n        <kotlin.compiler.languageVersion>1.0</kotlin.compiler.languageVersion>\n    </properties>\n</project>\n"}, {"type": "code", "text": "<project ...>\n    <properties>\n        <kotlin.compiler.languageVersion>1.0</kotlin.compiler.languageVersion>\n    </properties>\n</project>\n"}, {"type": "p", "text": "The following attributes are supported:"}, {"type": "h3", "text": "Attributes common for JVM and JS"}, {"type": "table", "text": "\n\n\nName\nProperty name\nDescription\nPossible values\nDefault value\n\n\n\n\nnowarn\n\u00a0\nGenerate no warnings\ntrue, false\nfalse\n\n\nlanguageVersion\nkotlin.compiler.languageVersion\nProvide source compatibility with specified language version\n\"1.0\", \"1.1\", \"1.2\", \"1.3\", \"1.4 (EXPERIMENTAL)\"\n\u00a0\n\n\napiVersion\nkotlin.compiler.apiVersion\nAllow to use declarations only from the specified version of bundled libraries\n\"1.0\", \"1.1\", \"1.2\", \"1.3\", \"1.4 (EXPERIMENTAL)\"\n\u00a0\n\n\nsourceDirs\n\u00a0\nThe directories containing the source files to compile\n\u00a0\nThe project source roots\n\n\ncompilerPlugins\n\u00a0\nEnabled compiler plugins\n\u00a0\n[]\n\n\npluginOptions\n\u00a0\nOptions for compiler plugins\n\u00a0\n[]\n\n\nargs\n\u00a0\nAdditional compiler arguments\n\u00a0\n[]\n\n\n"}, {"type": "thead", "text": "\n\nName\nProperty name\nDescription\nPossible values\nDefault value\n\n"}, {"type": "tr", "text": "\nName\nProperty name\nDescription\nPossible values\nDefault value\n"}, {"type": "th", "text": "Name"}, {"type": "th", "text": "Property name"}, {"type": "th", "text": "Description"}, {"type": "th", "text": "Possible values"}, {"type": "th", "text": "Default value"}, {"type": "tbody", "text": "\n\nnowarn\n\u00a0\nGenerate no warnings\ntrue, false\nfalse\n\n\nlanguageVersion\nkotlin.compiler.languageVersion\nProvide source compatibility with specified language version\n\"1.0\", \"1.1\", \"1.2\", \"1.3\", \"1.4 (EXPERIMENTAL)\"\n\u00a0\n\n\napiVersion\nkotlin.compiler.apiVersion\nAllow to use declarations only from the specified version of bundled libraries\n\"1.0\", \"1.1\", \"1.2\", \"1.3\", \"1.4 (EXPERIMENTAL)\"\n\u00a0\n\n\nsourceDirs\n\u00a0\nThe directories containing the source files to compile\n\u00a0\nThe project source roots\n\n\ncompilerPlugins\n\u00a0\nEnabled compiler plugins\n\u00a0\n[]\n\n\npluginOptions\n\u00a0\nOptions for compiler plugins\n\u00a0\n[]\n\n\nargs\n\u00a0\nAdditional compiler arguments\n\u00a0\n[]\n\n"}, {"type": "tr", "text": "\nnowarn\n\u00a0\nGenerate no warnings\ntrue, false\nfalse\n"}, {"type": "td", "text": "nowarn"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "Generate no warnings"}, {"type": "td", "text": "true, false"}, {"type": "td", "text": "false"}, {"type": "tr", "text": "\nlanguageVersion\nkotlin.compiler.languageVersion\nProvide source compatibility with specified language version\n\"1.0\", \"1.1\", \"1.2\", \"1.3\", \"1.4 (EXPERIMENTAL)\"\n\u00a0\n"}, {"type": "td", "text": "languageVersion"}, {"type": "td", "text": "kotlin.compiler.languageVersion"}, {"type": "td", "text": "Provide source compatibility with specified language version"}, {"type": "td", "text": "\"1.0\", \"1.1\", \"1.2\", \"1.3\", \"1.4 (EXPERIMENTAL)\""}, {"type": "td", "text": "\u00a0"}, {"type": "tr", "text": "\napiVersion\nkotlin.compiler.apiVersion\nAllow to use declarations only from the specified version of bundled libraries\n\"1.0\", \"1.1\", \"1.2\", \"1.3\", \"1.4 (EXPERIMENTAL)\"\n\u00a0\n"}, {"type": "td", "text": "apiVersion"}, {"type": "td", "text": "kotlin.compiler.apiVersion"}, {"type": "td", "text": "Allow to use declarations only from the specified version of bundled libraries"}, {"type": "td", "text": "\"1.0\", \"1.1\", \"1.2\", \"1.3\", \"1.4 (EXPERIMENTAL)\""}, {"type": "td", "text": "\u00a0"}, {"type": "tr", "text": "\nsourceDirs\n\u00a0\nThe directories containing the source files to compile\n\u00a0\nThe project source roots\n"}, {"type": "td", "text": "sourceDirs"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "The directories containing the source files to compile"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "The project source roots"}, {"type": "tr", "text": "\ncompilerPlugins\n\u00a0\nEnabled compiler plugins\n\u00a0\n[]\n"}, {"type": "td", "text": "compilerPlugins"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "Enabled compiler plugins"}, {"type": "a", "text": "compiler plugins"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "[]"}, {"type": "tr", "text": "\npluginOptions\n\u00a0\nOptions for compiler plugins\n\u00a0\n[]\n"}, {"type": "td", "text": "pluginOptions"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "Options for compiler plugins"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "[]"}, {"type": "tr", "text": "\nargs\n\u00a0\nAdditional compiler arguments\n\u00a0\n[]\n"}, {"type": "td", "text": "args"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "Additional compiler arguments"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "[]"}, {"type": "h3", "text": "Attributes specific for JVM"}, {"type": "table", "text": "\n\n\nName\nProperty name\nDescription\nPossible values\nDefault value\n\n\n\n\njvmTarget\nkotlin.compiler.jvmTarget\nTarget version of the generated JVM bytecode\n\"1.6\", \"1.8\", \"9\", \"10\", \"11\", \"12\"\n\"1.6\"\n\n\njdkHome\nkotlin.compiler.jdkHome\nPath to JDK home directory to include into classpath, if differs from default JAVA_HOME\n\u00a0\n\u00a0\n\n\n"}, {"type": "thead", "text": "\n\nName\nProperty name\nDescription\nPossible values\nDefault value\n\n"}, {"type": "tr", "text": "\nName\nProperty name\nDescription\nPossible values\nDefault value\n"}, {"type": "th", "text": "Name"}, {"type": "th", "text": "Property name"}, {"type": "th", "text": "Description"}, {"type": "th", "text": "Possible values"}, {"type": "th", "text": "Default value"}, {"type": "tbody", "text": "\n\njvmTarget\nkotlin.compiler.jvmTarget\nTarget version of the generated JVM bytecode\n\"1.6\", \"1.8\", \"9\", \"10\", \"11\", \"12\"\n\"1.6\"\n\n\njdkHome\nkotlin.compiler.jdkHome\nPath to JDK home directory to include into classpath, if differs from default JAVA_HOME\n\u00a0\n\u00a0\n\n"}, {"type": "tr", "text": "\njvmTarget\nkotlin.compiler.jvmTarget\nTarget version of the generated JVM bytecode\n\"1.6\", \"1.8\", \"9\", \"10\", \"11\", \"12\"\n\"1.6\"\n"}, {"type": "td", "text": "jvmTarget"}, {"type": "td", "text": "kotlin.compiler.jvmTarget"}, {"type": "td", "text": "Target version of the generated JVM bytecode"}, {"type": "td", "text": "\"1.6\", \"1.8\", \"9\", \"10\", \"11\", \"12\""}, {"type": "td", "text": "\"1.6\""}, {"type": "tr", "text": "\njdkHome\nkotlin.compiler.jdkHome\nPath to JDK home directory to include into classpath, if differs from default JAVA_HOME\n\u00a0\n\u00a0\n"}, {"type": "td", "text": "jdkHome"}, {"type": "td", "text": "kotlin.compiler.jdkHome"}, {"type": "td", "text": "Path to JDK home directory to include into classpath, if differs from default JAVA_HOME"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "\u00a0"}, {"type": "h3", "text": "Attributes specific for JS"}, {"type": "table", "text": "\n\n\nName\nProperty name\nDescription\nPossible values\nDefault value\n\n\n\n\noutputFile\n\u00a0\nOutput file path\n\u00a0\n\u00a0\n\n\nmetaInfo\n\u00a0\nGenerate .meta.js and .kjsm files with metadata. Use to create a library\ntrue, false\ntrue\n\n\nsourceMap\n\u00a0\nGenerate source map\ntrue, false\nfalse\n\n\nsourceMapEmbedSources\n\u00a0\nEmbed source files into source map\n\"never\", \"always\", \"inlining\"\n\"inlining\"\n\n\nsourceMapPrefix\n\u00a0\nPrefix for paths in a source map\n\u00a0\n\u00a0\n\n\nmoduleKind\n\u00a0\nKind of a module generated by compiler\n\"plain\", \"amd\", \"commonjs\", \"umd\"\n\"plain\"\n\n\n"}, {"type": "thead", "text": "\n\nName\nProperty name\nDescription\nPossible values\nDefault value\n\n"}, {"type": "tr", "text": "\nName\nProperty name\nDescription\nPossible values\nDefault value\n"}, {"type": "th", "text": "Name"}, {"type": "th", "text": "Property name"}, {"type": "th", "text": "Description"}, {"type": "th", "text": "Possible values"}, {"type": "th", "text": "Default value"}, {"type": "tbody", "text": "\n\noutputFile\n\u00a0\nOutput file path\n\u00a0\n\u00a0\n\n\nmetaInfo\n\u00a0\nGenerate .meta.js and .kjsm files with metadata. Use to create a library\ntrue, false\ntrue\n\n\nsourceMap\n\u00a0\nGenerate source map\ntrue, false\nfalse\n\n\nsourceMapEmbedSources\n\u00a0\nEmbed source files into source map\n\"never\", \"always\", \"inlining\"\n\"inlining\"\n\n\nsourceMapPrefix\n\u00a0\nPrefix for paths in a source map\n\u00a0\n\u00a0\n\n\nmoduleKind\n\u00a0\nKind of a module generated by compiler\n\"plain\", \"amd\", \"commonjs\", \"umd\"\n\"plain\"\n\n"}, {"type": "tr", "text": "\noutputFile\n\u00a0\nOutput file path\n\u00a0\n\u00a0\n"}, {"type": "td", "text": "outputFile"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "Output file path"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "\u00a0"}, {"type": "tr", "text": "\nmetaInfo\n\u00a0\nGenerate .meta.js and .kjsm files with metadata. Use to create a library\ntrue, false\ntrue\n"}, {"type": "td", "text": "metaInfo"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "Generate .meta.js and .kjsm files with metadata. Use to create a library"}, {"type": "td", "text": "true, false"}, {"type": "td", "text": "true"}, {"type": "tr", "text": "\nsourceMap\n\u00a0\nGenerate source map\ntrue, false\nfalse\n"}, {"type": "td", "text": "sourceMap"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "Generate source map"}, {"type": "td", "text": "true, false"}, {"type": "td", "text": "false"}, {"type": "tr", "text": "\nsourceMapEmbedSources\n\u00a0\nEmbed source files into source map\n\"never\", \"always\", \"inlining\"\n\"inlining\"\n"}, {"type": "td", "text": "sourceMapEmbedSources"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "Embed source files into source map"}, {"type": "td", "text": "\"never\", \"always\", \"inlining\""}, {"type": "td", "text": "\"inlining\""}, {"type": "tr", "text": "\nsourceMapPrefix\n\u00a0\nPrefix for paths in a source map\n\u00a0\n\u00a0\n"}, {"type": "td", "text": "sourceMapPrefix"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "Prefix for paths in a source map"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "\u00a0"}, {"type": "tr", "text": "\nmoduleKind\n\u00a0\nKind of a module generated by compiler\n\"plain\", \"amd\", \"commonjs\", \"umd\"\n\"plain\"\n"}, {"type": "td", "text": "moduleKind"}, {"type": "td", "text": "\u00a0"}, {"type": "td", "text": "Kind of a module generated by compiler"}, {"type": "td", "text": "\"plain\", \"amd\", \"commonjs\", \"umd\""}, {"type": "td", "text": "\"plain\""}, {"type": "h2", "text": "Generating documentation"}, {"type": "p", "text": "The standard JavaDoc generation plugin (maven-javadoc-plugin) does not support Kotlin code.\nTo generate documentation for Kotlin projects, use Dokka;\nplease refer to the Dokka README\nfor configuration instructions. Dokka supports mixed-language projects and can generate output in multiple\nformats, including standard JavaDoc."}, {"type": "code", "text": "maven-javadoc-plugin"}, {"type": "a", "text": "Dokka"}, {"type": "a", "text": "Dokka README"}, {"type": "h2", "text": "OSGi"}, {"type": "p", "text": "For OSGi support see the Kotlin OSGi page."}, {"type": "a", "text": "Kotlin OSGi page"}, {"type": "h2", "text": "Examples"}, {"type": "p", "text": "An example Maven project can be downloaded directly from the GitHub repository"}, {"type": "a", "text": "downloaded directly from the GitHub repository"}]