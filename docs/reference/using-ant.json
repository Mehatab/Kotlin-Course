[{"type": "a", "text": "\n\nEdit Page\n"}, {"type": "i", "text": ""}, {"type": "span", "text": "Edit Page"}, {"type": "h1", "text": "Using Ant"}, {"type": "h2", "text": "Getting the Ant Tasks"}, {"type": "p", "text": "Kotlin provides three tasks for Ant:"}, {"type": "ul", "text": "\nkotlinc: Kotlin compiler targeting the JVM;\nkotlin2js: Kotlin compiler targeting JavaScript;\nwithKotlin: Task to compile Kotlin files when using the standard javac Ant task.\n"}, {"type": "li", "text": "kotlinc: Kotlin compiler targeting the JVM;"}, {"type": "li", "text": "kotlin2js: Kotlin compiler targeting JavaScript;"}, {"type": "li", "text": "withKotlin: Task to compile Kotlin files when using the standard javac Ant task."}, {"type": "em", "text": "javac"}, {"type": "p", "text": "These tasks are defined in the kotlin-ant.jar library which is located in the lib folder for the Kotlin Compiler\nAnt version 1.8.2+ is required."}, {"type": "em", "text": "kotlin-ant.jar"}, {"type": "em", "text": "lib"}, {"type": "a", "text": "Kotlin Compiler"}, {"type": "h2", "text": "Targeting JVM with Kotlin-only source"}, {"type": "p", "text": "When the project consists of exclusively Kotlin source code, the easiest way to compile the project is to use the kotlinc task:"}, {"type": "em", "text": "kotlinc"}, {"type": "div", "text": "\n<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <kotlinc src=\"hello.kt\" output=\"hello.jar\"/>\n    </target>\n</project>\n\n"}, {"type": "pre", "text": "<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <kotlinc src=\"hello.kt\" output=\"hello.jar\"/>\n    </target>\n</project>\n"}, {"type": "code", "text": "<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <kotlinc src=\"hello.kt\" output=\"hello.jar\"/>\n    </target>\n</project>\n"}, {"type": "p", "text": "where ${kotlin.lib} points to the folder where the Kotlin standalone compiler was unzipped."}, {"type": "code", "text": "${kotlin.lib}"}, {"type": "h2", "text": "Targeting JVM with Kotlin-only source and multiple roots"}, {"type": "p", "text": "If a project consists of multiple source roots, use src as elements to define paths:"}, {"type": "em", "text": "src"}, {"type": "div", "text": "\n<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <kotlinc output=\"hello.jar\">\n            <src path=\"root1\"/>\n            <src path=\"root2\"/>\n        </kotlinc>\n    </target>\n</project>\n\n"}, {"type": "pre", "text": "<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <kotlinc output=\"hello.jar\">\n            <src path=\"root1\"/>\n            <src path=\"root2\"/>\n        </kotlinc>\n    </target>\n</project>\n"}, {"type": "code", "text": "<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <kotlinc output=\"hello.jar\">\n            <src path=\"root1\"/>\n            <src path=\"root2\"/>\n        </kotlinc>\n    </target>\n</project>\n"}, {"type": "h2", "text": "Targeting JVM with Kotlin and Java source"}, {"type": "p", "text": "If a project consists of both Kotlin and Java source code, while it is possible to use kotlinc, to avoid repetition of task parameters, it is\nrecommended to use withKotlin task:"}, {"type": "em", "text": "kotlinc"}, {"type": "em", "text": "withKotlin"}, {"type": "div", "text": "\n<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <delete dir=\"classes\" failonerror=\"false\"/>\n        <mkdir dir=\"classes\"/>\n        <javac destdir=\"classes\" includeAntRuntime=\"false\" srcdir=\"src\">\n            <withKotlin/>\n        </javac>\n        <jar destfile=\"hello.jar\">\n            <fileset dir=\"classes\"/>\n        </jar>\n    </target>\n</project>\n\n"}, {"type": "pre", "text": "<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <delete dir=\"classes\" failonerror=\"false\"/>\n        <mkdir dir=\"classes\"/>\n        <javac destdir=\"classes\" includeAntRuntime=\"false\" srcdir=\"src\">\n            <withKotlin/>\n        </javac>\n        <jar destfile=\"hello.jar\">\n            <fileset dir=\"classes\"/>\n        </jar>\n    </target>\n</project>\n"}, {"type": "code", "text": "<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <delete dir=\"classes\" failonerror=\"false\"/>\n        <mkdir dir=\"classes\"/>\n        <javac destdir=\"classes\" includeAntRuntime=\"false\" srcdir=\"src\">\n            <withKotlin/>\n        </javac>\n        <jar destfile=\"hello.jar\">\n            <fileset dir=\"classes\"/>\n        </jar>\n    </target>\n</project>\n"}, {"type": "p", "text": "You can also specify the name of the module being compiled as the moduleName attribute:"}, {"type": "code", "text": "moduleName"}, {"type": "div", "text": "\n<withKotlin moduleName=\"myModule\"/>\n\n"}, {"type": "pre", "text": "<withKotlin moduleName=\"myModule\"/>\n"}, {"type": "code", "text": "<withKotlin moduleName=\"myModule\"/>\n"}, {"type": "h2", "text": "Targeting JavaScript with single source folder"}, {"type": "div", "text": "\n<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <kotlin2js src=\"root1\" output=\"out.js\"/>\n    </target>\n</project>\n\n"}, {"type": "pre", "text": "<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <kotlin2js src=\"root1\" output=\"out.js\"/>\n    </target>\n</project>\n"}, {"type": "code", "text": "<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <kotlin2js src=\"root1\" output=\"out.js\"/>\n    </target>\n</project>\n"}, {"type": "h2", "text": "Targeting JavaScript with Prefix, PostFix and sourcemap options"}, {"type": "div", "text": "\n<project name=\"Ant Task Test\" default=\"build\">\n    <taskdef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <kotlin2js src=\"root1\" output=\"out.js\" outputPrefix=\"prefix\" outputPostfix=\"postfix\" sourcemap=\"true\"/>\n    </target>\n</project>\n\n"}, {"type": "pre", "text": "<project name=\"Ant Task Test\" default=\"build\">\n    <taskdef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <kotlin2js src=\"root1\" output=\"out.js\" outputPrefix=\"prefix\" outputPostfix=\"postfix\" sourcemap=\"true\"/>\n    </target>\n</project>\n"}, {"type": "code", "text": "<project name=\"Ant Task Test\" default=\"build\">\n    <taskdef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <kotlin2js src=\"root1\" output=\"out.js\" outputPrefix=\"prefix\" outputPostfix=\"postfix\" sourcemap=\"true\"/>\n    </target>\n</project>\n"}, {"type": "h2", "text": "Targeting JavaScript with single source folder and metaInfo option"}, {"type": "p", "text": "The metaInfo option is useful, if you want to distribute the result of translation as a Kotlin/JavaScript library.\nIf metaInfo was set to true, then during compilation additional JS file with\nbinary metadata will be created. This file should be distributed together with the\nresult of translation:"}, {"type": "code", "text": "metaInfo"}, {"type": "code", "text": "metaInfo"}, {"type": "code", "text": "true"}, {"type": "div", "text": "\n<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <!-- out.meta.js will be created, which contains binary metadata -->\n        <kotlin2js src=\"root1\" output=\"out.js\" metaInfo=\"true\"/>\n    </target>\n</project>\n\n"}, {"type": "pre", "text": "<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <!-- out.meta.js will be created, which contains binary metadata -->\n        <kotlin2js src=\"root1\" output=\"out.js\" metaInfo=\"true\"/>\n    </target>\n</project>\n"}, {"type": "code", "text": "<project name=\"Ant Task Test\" default=\"build\">\n    <typedef resource=\"org/jetbrains/kotlin/ant/antlib.xml\" classpath=\"${kotlin.lib}/kotlin-ant.jar\"/>\n\n    <target name=\"build\">\n        <!-- out.meta.js will be created, which contains binary metadata -->\n        <kotlin2js src=\"root1\" output=\"out.js\" metaInfo=\"true\"/>\n    </target>\n</project>\n"}, {"type": "h2", "text": "References"}, {"type": "p", "text": "Complete list of elements and attributes are listed below:"}, {"type": "h3", "text": "Attributes common for kotlinc and kotlin2js"}, {"type": "table", "text": "\n\n\nName\nDescription\nRequired\nDefault Value\n\n\n\n\nsrc\nKotlin source file or directory to compile\nYes\n\u00a0\n\n\nnowarn\nSuppresses all compilation warnings\nNo\nfalse\n\n\nnoStdlib\nDoes not include the Kotlin standard library into the classpath\nNo\nfalse\n\n\nfailOnError\nFails the build if errors are detected during the compilation\nNo\ntrue\n\n\n"}, {"type": "thead", "text": "\n\nName\nDescription\nRequired\nDefault Value\n\n"}, {"type": "tr", "text": "\nName\nDescription\nRequired\nDefault Value\n"}, {"type": "th", "text": "Name"}, {"type": "th", "text": "Description"}, {"type": "th", "text": "Required"}, {"type": "th", "text": "Default Value"}, {"type": "tbody", "text": "\n\nsrc\nKotlin source file or directory to compile\nYes\n\u00a0\n\n\nnowarn\nSuppresses all compilation warnings\nNo\nfalse\n\n\nnoStdlib\nDoes not include the Kotlin standard library into the classpath\nNo\nfalse\n\n\nfailOnError\nFails the build if errors are detected during the compilation\nNo\ntrue\n\n"}, {"type": "tr", "text": "\nsrc\nKotlin source file or directory to compile\nYes\n\u00a0\n"}, {"type": "td", "text": "src"}, {"type": "code", "text": "src"}, {"type": "td", "text": "Kotlin source file or directory to compile"}, {"type": "td", "text": "Yes"}, {"type": "td", "text": "\u00a0"}, {"type": "tr", "text": "\nnowarn\nSuppresses all compilation warnings\nNo\nfalse\n"}, {"type": "td", "text": "nowarn"}, {"type": "code", "text": "nowarn"}, {"type": "td", "text": "Suppresses all compilation warnings"}, {"type": "td", "text": "No"}, {"type": "td", "text": "false"}, {"type": "tr", "text": "\nnoStdlib\nDoes not include the Kotlin standard library into the classpath\nNo\nfalse\n"}, {"type": "td", "text": "noStdlib"}, {"type": "code", "text": "noStdlib"}, {"type": "td", "text": "Does not include the Kotlin standard library into the classpath"}, {"type": "td", "text": "No"}, {"type": "td", "text": "false"}, {"type": "tr", "text": "\nfailOnError\nFails the build if errors are detected during the compilation\nNo\ntrue\n"}, {"type": "td", "text": "failOnError"}, {"type": "code", "text": "failOnError"}, {"type": "td", "text": "Fails the build if errors are detected during the compilation"}, {"type": "td", "text": "No"}, {"type": "td", "text": "true"}, {"type": "h3", "text": "kotlinc Attributes"}, {"type": "table", "text": "\n\n\nName\nDescription\nRequired\nDefault Value\n\n\n\n\noutput\nDestination directory or .jar file name\nYes\n\u00a0\n\n\nclasspath\nCompilation class path\nNo\n\u00a0\n\n\nclasspathref\nCompilation class path reference\nNo\n\u00a0\n\n\nincludeRuntime\nIf output is a .jar file, whether Kotlin runtime library is included in the jar\nNo\ntrue\n\n\nmoduleName\nName of the module being compiled\nNo\nThe name of the target (if specified) or the project\n\n\n"}, {"type": "thead", "text": "\n\nName\nDescription\nRequired\nDefault Value\n\n"}, {"type": "tr", "text": "\nName\nDescription\nRequired\nDefault Value\n"}, {"type": "th", "text": "Name"}, {"type": "th", "text": "Description"}, {"type": "th", "text": "Required"}, {"type": "th", "text": "Default Value"}, {"type": "tbody", "text": "\n\noutput\nDestination directory or .jar file name\nYes\n\u00a0\n\n\nclasspath\nCompilation class path\nNo\n\u00a0\n\n\nclasspathref\nCompilation class path reference\nNo\n\u00a0\n\n\nincludeRuntime\nIf output is a .jar file, whether Kotlin runtime library is included in the jar\nNo\ntrue\n\n\nmoduleName\nName of the module being compiled\nNo\nThe name of the target (if specified) or the project\n\n"}, {"type": "tr", "text": "\noutput\nDestination directory or .jar file name\nYes\n\u00a0\n"}, {"type": "td", "text": "output"}, {"type": "code", "text": "output"}, {"type": "td", "text": "Destination directory or .jar file name"}, {"type": "td", "text": "Yes"}, {"type": "td", "text": "\u00a0"}, {"type": "tr", "text": "\nclasspath\nCompilation class path\nNo\n\u00a0\n"}, {"type": "td", "text": "classpath"}, {"type": "code", "text": "classpath"}, {"type": "td", "text": "Compilation class path"}, {"type": "td", "text": "No"}, {"type": "td", "text": "\u00a0"}, {"type": "tr", "text": "\nclasspathref\nCompilation class path reference\nNo\n\u00a0\n"}, {"type": "td", "text": "classpathref"}, {"type": "code", "text": "classpathref"}, {"type": "td", "text": "Compilation class path reference"}, {"type": "td", "text": "No"}, {"type": "td", "text": "\u00a0"}, {"type": "tr", "text": "\nincludeRuntime\nIf output is a .jar file, whether Kotlin runtime library is included in the jar\nNo\ntrue\n"}, {"type": "td", "text": "includeRuntime"}, {"type": "code", "text": "includeRuntime"}, {"type": "td", "text": "If output is a .jar file, whether Kotlin runtime library is included in the jar"}, {"type": "code", "text": "output"}, {"type": "td", "text": "No"}, {"type": "td", "text": "true"}, {"type": "tr", "text": "\nmoduleName\nName of the module being compiled\nNo\nThe name of the target (if specified) or the project\n"}, {"type": "td", "text": "moduleName"}, {"type": "code", "text": "moduleName"}, {"type": "td", "text": "Name of the module being compiled"}, {"type": "td", "text": "No"}, {"type": "td", "text": "The name of the target (if specified) or the project"}, {"type": "h3", "text": "kotlin2js Attributes"}, {"type": "table", "text": "\n\n\nName\nDescription\nRequired\n\n\n\n\noutput\nDestination file\nYes\n\n\nlibraries\nPaths to Kotlin libraries\nNo\n\n\noutputPrefix\nPrefix to use for generated JavaScript files\nNo\n\n\noutputSuffix\nSuffix to use for generated JavaScript files\nNo\n\n\nsourcemap\nWhether sourcemap file should be generated\nNo\n\n\nmetaInfo\nWhether metadata file with binary descriptors should be generated\nNo\n\n\nmain\nShould compiler generated code call the main function\nNo\n\n\n"}, {"type": "thead", "text": "\n\nName\nDescription\nRequired\n\n"}, {"type": "tr", "text": "\nName\nDescription\nRequired\n"}, {"type": "th", "text": "Name"}, {"type": "th", "text": "Description"}, {"type": "th", "text": "Required"}, {"type": "tbody", "text": "\n\noutput\nDestination file\nYes\n\n\nlibraries\nPaths to Kotlin libraries\nNo\n\n\noutputPrefix\nPrefix to use for generated JavaScript files\nNo\n\n\noutputSuffix\nSuffix to use for generated JavaScript files\nNo\n\n\nsourcemap\nWhether sourcemap file should be generated\nNo\n\n\nmetaInfo\nWhether metadata file with binary descriptors should be generated\nNo\n\n\nmain\nShould compiler generated code call the main function\nNo\n\n"}, {"type": "tr", "text": "\noutput\nDestination file\nYes\n"}, {"type": "td", "text": "output"}, {"type": "code", "text": "output"}, {"type": "td", "text": "Destination file"}, {"type": "td", "text": "Yes"}, {"type": "tr", "text": "\nlibraries\nPaths to Kotlin libraries\nNo\n"}, {"type": "td", "text": "libraries"}, {"type": "code", "text": "libraries"}, {"type": "td", "text": "Paths to Kotlin libraries"}, {"type": "td", "text": "No"}, {"type": "tr", "text": "\noutputPrefix\nPrefix to use for generated JavaScript files\nNo\n"}, {"type": "td", "text": "outputPrefix"}, {"type": "code", "text": "outputPrefix"}, {"type": "td", "text": "Prefix to use for generated JavaScript files"}, {"type": "td", "text": "No"}, {"type": "tr", "text": "\noutputSuffix\nSuffix to use for generated JavaScript files\nNo\n"}, {"type": "td", "text": "outputSuffix"}, {"type": "code", "text": "outputSuffix"}, {"type": "td", "text": "Suffix to use for generated JavaScript files"}, {"type": "td", "text": "No"}, {"type": "tr", "text": "\nsourcemap\nWhether sourcemap file should be generated\nNo\n"}, {"type": "td", "text": "sourcemap"}, {"type": "code", "text": "sourcemap"}, {"type": "td", "text": "Whether sourcemap file should be generated"}, {"type": "td", "text": "No"}, {"type": "tr", "text": "\nmetaInfo\nWhether metadata file with binary descriptors should be generated\nNo\n"}, {"type": "td", "text": "metaInfo"}, {"type": "code", "text": "metaInfo"}, {"type": "td", "text": "Whether metadata file with binary descriptors should be generated"}, {"type": "td", "text": "No"}, {"type": "tr", "text": "\nmain\nShould compiler generated code call the main function\nNo\n"}, {"type": "td", "text": "main"}, {"type": "code", "text": "main"}, {"type": "td", "text": "Should compiler generated code call the main function"}, {"type": "td", "text": "No"}, {"type": "h3", "text": "Passing raw compiler arguments"}, {"type": "p", "text": "To pass custom raw compiler arguments, you can use <compilerarg> elements with either value or line attributes.\nThis can be done within the <kotlinc>, <kotlin2js>, and <withKotlin> task elements, as follows:"}, {"type": "code", "text": "<compilerarg>"}, {"type": "code", "text": "value"}, {"type": "code", "text": "line"}, {"type": "code", "text": "<kotlinc>"}, {"type": "code", "text": "<kotlin2js>"}, {"type": "code", "text": "<withKotlin>"}, {"type": "div", "text": "\n<kotlinc src=\"${test.data}/hello.kt\" output=\"${temp}/hello.jar\">\n    <compilerarg value=\"-Xno-inline\"/>\n    <compilerarg line=\"-Xno-call-assertions -Xno-param-assertions\"/>\n    <compilerarg value=\"-Xno-optimize\"/>\n</kotlinc>\n\n"}, {"type": "pre", "text": "<kotlinc src=\"${test.data}/hello.kt\" output=\"${temp}/hello.jar\">\n    <compilerarg value=\"-Xno-inline\"/>\n    <compilerarg line=\"-Xno-call-assertions -Xno-param-assertions\"/>\n    <compilerarg value=\"-Xno-optimize\"/>\n</kotlinc>\n"}, {"type": "code", "text": "<kotlinc src=\"${test.data}/hello.kt\" output=\"${temp}/hello.jar\">\n    <compilerarg value=\"-Xno-inline\"/>\n    <compilerarg line=\"-Xno-call-assertions -Xno-param-assertions\"/>\n    <compilerarg value=\"-Xno-optimize\"/>\n</kotlinc>\n"}, {"type": "p", "text": "The full list of arguments that can be used is shown when you run kotlinc -help."}, {"type": "code", "text": "kotlinc -help"}]